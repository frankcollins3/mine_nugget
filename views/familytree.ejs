<!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title></title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="">
    </head>
    <style>
        .containerContainer{
                display: flex;
             flex-direction: row;
             justify-content: space-between;
             width: 75%;
             height: 25%;
        }
        .newContainer {
            /* display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr; */
            display: flex;
            flex-direction: row;
            justify-content: center;
            margin-top: 5em;
            background-color: rgb(62, 50, 32);
            border: 5px solid papayawhip;
            box-shadow: 15px 15px 15px rgb(247, 208, 36);
            padding: 0em 10em 0em 10em;
        }
        
        .goldShadow {
            box-shadow: 3px 3px 3px rgb(247, 208, 36);
            border: 3px solid papayawhip;
        }
        
        .section {
            display: flex;
            flex-direction: column;
            justify-content: center;

            width: 10%;
            background-color: golenrod;
            border: 3px solid papayawhip;
        }
        p {
            font-family: 'Urw Chanery L';
            font-size: 18px;
            letter-spacing: 0.33em;
            color: papayawhip;
        }
        .fakeBoop  {
    position: relative;
    /* border: 15px solid royalblue; */
    animation: animate 5s;
    }

    @keyframes animate {
        0% {
        top: -2px   
        }
        20% {
        top: 5px
        }
        40% {
        top: -4px
        }
        60% {
        top: 5px;
        }
        80% {
        top: -2px
        }
        100% {
        top: 5px
        }
    }
            /* transform: scale(1.75); 
            padding: 0, 3em, 0, 3em */
    </style>
    <body class="famtree">
        <%- include('./partials/navbar') %>
            <!-- <header> -->
            <!-- </header> -->

        <img src="/img/cactus.png" id="cactus">  
        <div class="jewelrybox">
            
            <img src="/img/watch.png" class="parent" id="parent1"> 
            <img src="/img/ring.png" class="parent" id="parent2">
        </div>

        
        
        
    </body>
    </html>

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script>
    console.log('a tag nugget')
    console.log($('.nameOrNugget'))
    let animatedName = $('.nameOrNugget')
    animatedName
    .html('Hover & Discover!')


    // .on('mouseenter', ()=> $('#strain').css('border-bottom', '5px solid '))
    // $('.nameOrNugget').html('Hover & Discover!') // dang. 10 minutes which felt like eternity having trouble in navBar.ejs file w/ this.
    // setTimeout( animatedName.hide(), "7000")
    // setTimeout($('.nameOrNugget').hide(), "7000")

    // ******* Global Variables and Declarations
    let dad = $('#parent1') // coming from advantaged ground of not rendering cannabis images, dad == 'parent1' mom == 'parent2' not so bad
    dad 
    .css('height', '85px')
    .css('width', '85px')
 
    let mom = $('#parent2')
    mom
    .css('height', '85px')
    .css('width', '85px')
 
    let famheight = $(document).height().toFixed()
    let famwidth = $(document).width().toFixed()

    let bod = $('.famtree')
    bod
    .css('background-color', 'rgb(62, 50, 32)')
    .css('display', 'flex')
    .css('align-items', 'center')
    .css('flex-flow', 'column nowrap')
    .css('margin-top', '10em')


    let parents = $('.parent')
    parents
    .hide()
    
    // $('#cactus').on('mouseenter',(event)=> $(event.target).hide(), parents.show()) no.
    
    let cactus = $('#cactus')
    cactus
    .css('margin-top', '5em')
    .on('mouseenter', (event) => {
        $(event.target).hide()
        parents
        .css('margin-top', '7em')
        .show()
    })
    let box = $('.jewelrybox')
    box
    .css('margin-top', '2em')
    .css('display', 'flex')
    .css('flex-direction', 'row') 

    let jewelryCount = 0
    let wholeJewelryCount = new Array()

    // functinos!
    const addBox = () => {
                    console.log('dad length')
                    console.log($('.parent').length)
                    // for (let i = 0; i < parents.length; i++) {
                        let textBox = document.createElement('div')
                        $(textBox)
                        .css('height', '100px')
                        .css('width', '100px')
                        .css('background-color', 'white')
                        // .css('border', '5px solid green')

                        let containerContainer = document.createElement('div')
                        $(containerContainer)
                        .addClass('containerContainer')

                        let newContainer = document.createElement('div')        
                        // was doing this for about an hour before seeing its better to make two containers.  1 for the parents 1 for the .childnren()
                        $(newContainer)
                        .addClass('newContainer')
                        // .attr('id', 'newcontainer1')
                        .css('height', `${famheight/12}`)
                        .css('width', `${famwidth/10}`)
                    
                        let newContainer2 = document.createElement('div')        
                        $(newContainer2)
                        .addClass('newContainer')
                        // .attr('id', 'newcontainer2')
                        .css('height', `${famheight/12}`)
                        .css('width', `${famwidth/10}`)

                        let childContainer = document.createElement('div')
                        $(childContainer)
                        .attr('id', 'childContainer')
                        .css('height', `${famheight/20}`)
                        .css('width', `${famwidth/2}`)
                        .css("display", 'flex')
                        .css("justify-content", 'space-between')
                        .css("margin-top", '5em')
                        .css("background-color", 'rgb(62, 50, 32')
                        .css("border", '5px solid papayawhip')
                        .css("box-shadow", '15px 15px 15px rgb(247, 208, 36')
                        .css("padding", '0em 10em 0em 10em')

                        bod.append($(containerContainer))

                        $(containerContainer)
                        .append(newContainer)
                        .append(newContainer2)

                        const playButton = document.createElement('img')
                        $(playButton)
                        .css('height', '100px')
                        .css('width', '100px')
                        .attr('src', '/img/gold.png')
                        .attr('id', 'playBtn')
                        .css('opacity', '0.1')

                        bod
                        .append($(playButton))       // very neat to see everything fall in line.
                        .append($(childContainer))  // kind of trying to break camelcase after reading it seems to make it more unreadable and i'd agree. try to stay consistent when already jammed with having set a few things into camelCase format.
                        // setTimeout($('#playBtn').hide(), "3000")
                }  // addBox function

                const goldBottomAnimation = (event) => {     
                event.css('border-bottom', '2px solid papayawhip')
               event.siblings().css('border-bottom', '2px solid rgb(247, 208, 36)')
               // .parents().children() will escape the parent container up to the body and go down towards all children. funny to find this out. 
               // $(event.target).parents().children().css('border-bottom', '2px solid papayawhip') 
               const unBorder = () => box.children().css('border-bottom', '')
               console.log('hey now were over here')
               // setTimeout((event.target).siblings().css('padding', '0, 5em, 0, 5em'), "2000")
               setTimeout( () => $(event).siblings().css('padding', '0 6em 0 6em'), "1000")
               setTimeout( () => $(event).siblings().siblings().css('padding', '0 6em 0 6em'), "1000") 
               setTimeout(unBorder, "2000")
               setTimeout( () => {
    
               }, "2000")      // this will trigger the function to happen after.
            }
            let strainUrl = `https://frankcollins3.github.io/strainuous/strain.json`
            const getGitStrains = () => {
                $.ajax({
                    method: 'GET',
                    url: strainUrl,
                    dataTypes: 'json'
                }).then( (ajdata) => {
                    console.log(ajdata)
                    return ajdata
                })
            }
            console.log('here are the strains')
            console.log(getGitStrains())
            //     const goldBottomAnimation = (event) => {     
            //     $(event.target).css('border-bottom', '2px solid papayawhip')
            //    $(event.target).siblings().css('border-bottom', '2px solid rgb(247, 208, 36)')
            //    // .parents().children() will escape the parent container up to the body and go down towards all children. funny to find this out. 
            //    // $(event.target).parents().children().css('border-bottom', '2px solid papayawhip') 
            //    const unBorder = () => box.children().css('border-bottom', '')
            //    console.log('hey now were over here')
            //    // setTimeout((event.target).siblings().css('padding', '0, 5em, 0, 5em'), "2000")
            //    setTimeout( () => $(event.target).siblings().css('padding', '0 6em 0 6em'), "1000")
            //    setTimeout( () => $(event.target).siblings().siblings().css('padding', '0 6em 0 6em'), "1000") 
            //    setTimeout(unBorder, "2000")
            //    setTimeout( () => {
    
            //    }, "2000")      // this will trigger the function to happen after.
            // }





    // .children().hide() i dont know why this isn't hiding the rings and the watch but that's okay
    // if (wholeJewelCounter.length == 1) {    // this very simple line is our anti-duplicate safeguard since the second time you hover the count will be: [].length == 2] invalidating this condition, forbidding the $(body).append$(container)
        box.children().on('mouseenter', (event) => {
            jewelryCount++
            wholeJewelryCount.push(jewelryCount)
            // if ($('#playBtn').length < 1) {
            //     addBox()
            // }
            if (wholeJewelryCount.length == 1) {
                goldBottomAnimation(($(event.target)))      // sweet.
                setTimeout(addBox, "4000")
            }
            if (wholeJewelryCount.length == 2) {

            }
           })
       
                
            console.log('WE ARE AT LENGTH of 1!!!!!!!*****')




        //     for (let i = 18; i < 50; i++) {
        // let inputOption = document.createElement('option')
        // $(inputOption).attr('value', i.toString())          
        // $(inputOption).text(i.toString())
        // $('select').append($(inputOption))
        // }


</script>
